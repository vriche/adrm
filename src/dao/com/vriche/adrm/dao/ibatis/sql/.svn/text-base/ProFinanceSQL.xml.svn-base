<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" 
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="ProFinanceSQL">
    <typeAlias alias="proFinance" type="com.vriche.adrm.model.ProFinance"/>

	<cacheModel id="proFinance-cache" type="LRU">
		<flushInterval hours="24"/>
		<flushOnExecute statement="addProFinance"/>
		<flushOnExecute statement="updateProFinance"/>
		<flushOnExecute statement="deleteProFinance"/>
		<flushOnExecute statement="deleteProFinances"/>
		<property name="size" value="1000" />
	</cacheModel>
    <parameterMap id="addParam" class="proFinance">
		<parameter property="orderId" jdbcType="INTEGER" javaType="java.lang.Long"/>
		<parameter property="payMoney" jdbcType="DOUBLE" javaType="java.lang.Double"/>
        <parameter property="payDate" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <parameter property="paidMoney" jdbcType="DOUBLE" javaType="java.lang.Double"/>
        <parameter property="paidDate" jdbcType="INTEGER" javaType="java.lang.Integer"/>
		<parameter property="incomeModeId" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="incomePurposeId" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="createBy" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="createDate" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <parameter property="modifyBy" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="modifyDate" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
		<parameter property="version" jdbcType="INTEGER" javaType="java.lang.Integer"/>
    </parameterMap>

    <parameterMap id="updateParam" class="proFinance">
		<parameter property="orderId" jdbcType="INTEGER" javaType="java.lang.Long"/>
		<parameter property="payMoney" jdbcType="DOUBLE" javaType="java.lang.Double"/>
        <parameter property="payDate" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <parameter property="paidMoney" jdbcType="DOUBLE" javaType="java.lang.Double"/>
        <parameter property="paidDate" jdbcType="INTEGER" javaType="java.lang.Integer"/>
		<parameter property="incomeModeId" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="incomePurposeId" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="modifyBy" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="modifyDate" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
		<parameter property="version" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <parameter property="id" jdbcType="INTEGER" javaType="java.lang.Long"/>
    </parameterMap>
    <resultMap id="proFinanceResult" class="proFinance">
		<result property="id" column="id"/>
        <result property="orderId" column="order_id"/>
		<result property="payMoney" column="pay_money"/>
        <result property="payDate" column="pay_date"/>
        <result property="paidMoney" column="paid_money"/>
        <result property="paidDate" column="paid_date"/>
		<result property="incomeModeId" column="income_mode_id"/>
        <result property="incomePurposeId" column="income_purpose_id"/>
		<result property="createBy" column="create_by"/>
        <result property="createDate" column="create_date"/>
        <result property="modifyBy" column="modify_by"/>
		<result property="modifyDate" column="modify_date"/>
        <result property="version" column="version"/>
    </resultMap>
	
    <sql id="ProFinance_where_fragment">
			<isNotEmpty prepend="AND" property="id">
			(id like #id#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="orderId">
			(order_id like #orderId#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="payMoney">
			(pay_money like #payMoney#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="payDate">
			(pay_date like #payDate#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="paidMoney">
			(paid_money like #paidMoney#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="paidDate">
			(paid_date like #paidDate#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="incomeModeId">
			(income_mode_id like #incomeModeId#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="incomePurposeId">
			(income_purpose_id like #incomePurposeId#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="version">
			(version like #version#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="createBy">
			(create_by like #createBy#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="createDate">
			(create_date like #createDate#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="modifyBy">
			(modify_by like #modifyBy#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="modifyDate">
			(modify_date like #modifyDate#)
			</isNotEmpty>
    </sql>
     <sql id="ProFinance_idList_fragment">
	      <isNotNull property="ProFinanceIdList">
       	  <iterate prepend="AND" property="ProFinanceIdList" open="(" close=")" conjunction="OR">
		   			 id = #ProFinanceIdList[]#
		  </iterate>
		  </isNotNull> 
    </sql>   
    <select id="getProFinance" resultMap="proFinanceResult">
    <![CDATA[
        select * from tb_pro_Finance	     
    ]]>
		<dynamic prepend="WHERE"> 
 	 	<include refid="ProFinance_where_fragment"/>
		</dynamic>  
    </select>

	<select id="getProFinanceCount" resultClass="java.lang.Integer">
    <![CDATA[
        select count(*) from tb_pro_finance
		where id = #value#
    ]]>
    </select>	
	

    <select id="getProFinancesByMap" parameterClass="java.util.Map">
     <![CDATA[  
      select* from tb_pro_Finance 
       ]]> 
 	 	  <dynamic prepend="WHERE"> 
 	 	  	<include refid="ProFinance_idList_fragment"/>
          </dynamic>     
  </select>   

    <insert id="addProFinance" parameterMap="addParam">

        <![CDATA[
             insert into tb_pro_finance (order_id,pay_money,pay_date,paid_money,paid_date,income_mode_id,income_purpose_id,create_by,create_date,modify_by,modify_date,version)
            values (?,?,?,?,?,?,?,?,?,?,?,?)
        ]]>
        <selectKey resultClass="java.lang.Long" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
    </insert>

    <update id="updateProFinance" parameterMap="updateParam">
    <![CDATA[
        update tb_pro_finance set
                   order_id = ?,
                   pay_money = ?,
                   pay_date = ?,
                   paid_money = ?,
                   paid_date = ?,
                   income_mode_id = ?,
                   income_purpose_id = ?,                
                   modify_by = ?,
                   modify_date = ?,
		           version = ?

        where id = ?
    ]]>
    </update>

    <delete id="deleteProFinance">
    <![CDATA[
        delete from tb_pro_finance
         where id = #value#
    ]]>
    </delete>
	
	    <delete id="deleteProFinanceByOrderId">
    <![CDATA[
        delete from tb_pro_finance
         where order_id = #value#
    ]]>
    </delete>
   <update id="deleteProFinances" parameterClass="java.util.Map">
     <![CDATA[  
      delete from tb_pro_finance 
       ]]> 
 	 	  <dynamic prepend="WHERE"> 
			<include refid="ProFinance_idList_fragment"/>
          </dynamic>      
  </update>   
</sqlMap>
