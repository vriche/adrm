<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" 
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="ProProgramSQL">
    <typeAlias alias="proProgram" type="com.vriche.adrm.model.ProProgram"/>
	<typeAlias alias="proOrder" type="com.vriche.adrm.model.ProOrder"/>
	<cacheModel id="proProgram-cache" type="LRU">
		<flushInterval hours="24"/>
		<flushOnExecute statement="addProProgram"/>
		<flushOnExecute statement="updateProProgram"/>
		<flushOnExecute statement="deleteProProgram"/>
		<flushOnExecute statement="deleteProPrograms"/>
		<property name="size" value="1000" />
	</cacheModel>
	
    <parameterMap id="addParam" class="proProgram">
        <parameter property="customerId" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="copyrightNum" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <parameter property="createBy" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="createDate" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <parameter property="endDate" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <parameter property="modifyBy" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="modifyDate" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <parameter property="proName" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <parameter property="startDate" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <parameter property="typeId" jdbcType="INTEGER" javaType="java.lang.Long"/>
		<parameter property="businessName" jdbcType="VARCHAR" javaType="java.lang.String"/>
		
		<parameter property="isChecked" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="sowCount" jdbcType="DOUBLE" javaType="java.lang.Double"/>
        <parameter property="arriveDate" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <parameter property="checkedDate" jdbcType="INTEGER" javaType="java.lang.Integer"/>
		<parameter property="price" jdbcType="DOUBLE" javaType="java.lang.Double"/>
        <parameter property="audienceRat" jdbcType="DOUBLE" javaType="java.lang.Double"/>
        <parameter property="isSell" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="copyrightArea" jdbcType="VARCHAR" javaType="java.lang.String"/>
		<parameter property="programStatusId" jdbcType="INTEGER" javaType="java.lang.Long"/>
    </parameterMap>

    <parameterMap id="updateParam" class="proProgram">
        <parameter property="customerId" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="copyrightNum" jdbcType="VARCHAR" javaType="java.lang.String"/>
		<parameter property="startDate" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <parameter property="endDate" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <parameter property="modifyBy" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="modifyDate" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <parameter property="proName" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <parameter property="typeId" jdbcType="INTEGER" javaType="java.lang.Long"/>
		<parameter property="businessName" jdbcType="VARCHAR" javaType="java.lang.String"/>	
		<parameter property="isChecked" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="sowCount" jdbcType="DOUBLE" javaType="java.lang.Double"/>
        <parameter property="arriveDate" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <parameter property="checkedDate" jdbcType="INTEGER" javaType="java.lang.Integer"/>
		<parameter property="price" jdbcType="DOUBLE" javaType="java.lang.Double"/>
        <parameter property="audienceRat" jdbcType="DOUBLE" javaType="java.lang.Double"/>
        <parameter property="isSell" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="copyrightArea" jdbcType="VARCHAR" javaType="java.lang.String"/>
		<parameter property="programStatusId" jdbcType="INTEGER" javaType="java.lang.Long"/>
		<parameter property="id" jdbcType="INTEGER" javaType="java.lang.Long"/>
    </parameterMap>
	
	<parameterMap id="updateprogramStatusParam" class="proProgram">
		<parameter property="programStatusId" jdbcType="INTEGER" javaType="java.lang.Long"/>
		<parameter property="id" jdbcType="INTEGER" javaType="java.lang.Long"/>
    </parameterMap>
	
    <resultMap id="proProgramResult" class="proProgram">
        <result property="customerId" column="customer_id"/>
        <result property="copyrightNum" column="copyright_num"/>
        <result property="createBy" column="create_by"/>
        <result property="createDate" column="create_date"/>
        <result property="endDate" column="end_date"/>
        <result property="id" column="id"/>
        <result property="modifyBy" column="modify_by"/>
        <result property="modifyDate" column="modify_date"/>
        <result property="proName" column="program_name"/>
        <result property="startDate" column="start_date"/>
        <result property="typeId" column="program_type_id"/>
        <result property="version" column="version"/>
		<result property="businessName" column="business_name"/>
		
		<result property="isChecked" column="is_checked"/>
		<result property="sowCount" column="sow_count"/>
		<result property="arriveDate" column="arrive_date"/>
		<result property="checkedDate" column="checked_date"/>
		<result property="price" column="price"/>
		<result property="audienceRat" column="audience_rat"/>
		<result property="isSell" column="is_sell"/>
		<result property="copyrightArea" column="copyright_area"/>
		 <result property="programStatusId" column="program_status_id"/>
    </resultMap>
	<resultMap id="proProgramResult1" class="proProgram">
        <result property="customerId" column="customer_id"/>
        <result property="copyrightNum" column="copyright_num"/>
        <result property="createBy" column="create_by"/>
        <result property="createDate" column="create_date"/>
        <result property="endDate" column="end_date"/>
        <result property="id" column="id"/>
        <result property="modifyBy" column="modify_by"/>
        <result property="modifyDate" column="modify_date"/>
        <result property="proName" column="program_name"/>
        <result property="startDate" column="start_date"/>
        <result property="typeId" column="program_type_id"/>
        <result property="version" column="version"/>
		<result property="proCustomer.customerName" column="customer_name"/>
		<result property="proProgramType.name" column="name"/>
		<result property="businessName" column="business_name"/>
		
		<result property="isChecked" column="is_checked"/>
		<result property="sowCount" column="sow_count"/>
		<result property="arriveDate" column="arrive_date"/>
		<result property="checkedDate" column="checked_date"/>
		<result property="price" column="price"/>
		<result property="audienceRat" column="audience_rat"/>
		<result property="isSell" column="is_sell"/>
		<result property="copyrightArea" column="copyright_area"/>
		 <result property="programStatusId" column="program_status_id"/>
		<result property="proCustomer.accountAddress" column="account_address"/>
    </resultMap>
    <sql id="ProProgram_where_fragment">
			<isNotEmpty prepend="AND" property="customerId">
			(customer_id like #customerId#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="copyrightNum">
			(copyright_num like #copyrightNum#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="createBy">
			(create_by like #createBy#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="createDate">
			(create_date like #createDate#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="endDate">
			(end_date like #endDate#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="id">
			(id like #id#)
			</isNotEmpty>
		
			<isNotEmpty prepend="AND" property="isChecked">
			(is_checked like #isChecked#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sowCount">
			(sow_count like #sowCount#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="arriveDate">
			(arrive_date like #arriveDate#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="checkedDate">
			(checked_date like #checkedDate#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="price">
			(price like #price#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="audienceRat">
			(audience_rat like #audienceRat#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="isSell">
			(is_sell like #isSell#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="copyrightArea">
			(copyright_area like #copyrightArea#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="programStatusId">
			(program_status_id like #programStatusId#)
			</isNotEmpty>
		
			<isNotEmpty prepend="AND" property="modifyBy">
			(modify_by like #modifyBy#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="modifyDate">
			(modify_date like #modifyDate#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="proName">
			(program_name like #proName#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="startDate">
			(start_date like #startDate#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="typeId">
			(program_type_id like #typeId#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="version">
			(version like #version#)
			</isNotEmpty>
		
    </sql>
     <sql id="ProProgram_idList_fragment">
	      <isNotNull property="ProProgramIdList">
       	  <iterate prepend="AND" property="ProProgramIdList" open="(" close=")" conjunction="OR">
		   			 id = #ProProgramIdList[]#
		  </iterate>
		  </isNotNull> 
    </sql>   
    <select id="getProProgramsCount" resultClass="java.lang.Integer">
    <![CDATA[
        select count(*) from tb_pro_program 
    ]]>
		<dynamic prepend="WHERE"> 
 	 	<include refid="ProProgram_where_fragment"/>
		</dynamic>  
    </select>
	<select id="getProProgramsCountByName" resultClass="java.lang.Integer">
    <![CDATA[
        select count(*) from tb_pro_program pp
			left outer join tb_pro_customer pc 
				on  pc.id = pp.customer_id 
    ]]>
		<dynamic prepend="WHERE"> 
 	 	<isNotEmpty prepend="AND" property="copyrightNum">
			(pp.copyright_num like '%$copyrightNum$%')
			</isNotEmpty>
			
			<isNotEmpty prepend="AND" property="proName">
			(pp.program_name like '%$proName$%')
			</isNotEmpty>
			
			<!--<isNotEmpty prepend="AND" property="typeId">
			(pp.program_type_id like #typeId#)
			</isNotEmpty>-->
			
		  <isNotNull property="proTypeIdList">
       	  <iterate prepend="AND" property="proTypeIdList" open="(" close=")" conjunction="OR">
		   			pp.program_type_id = #proTypeIdList[]#
		  </iterate>
		  </isNotNull> 
			
			<isNotEmpty prepend="AND" property="proCustomer.customerName">
			(pc.customer_name like '%$proCustomer.customerName$%')
			</isNotEmpty>
		</dynamic>  
    </select>		

	<select id="getProProgramsOfName" resultMap="proProgramResult1">
    <![CDATA[
        select pp.*,
		pc.customer_name as customer_name,
		ppt.name as  name,
		owfcs.name as account_address,
		ppd.commend_level
		 from tb_pro_program pp
			left outer join tb_pro_customer pc 
				on  pc.id = pp.customer_id 
			left outer join tb_pro_program_type ppt
				on  ppt.id = pp.program_type_id 
			left outer join tb_oa_work_flow_check_state owfcs
				on  pp.is_checked = owfcs.check_state_id
		    left outer join tb_pro_program_detail ppd
				on  pp.id = ppd.program_id

    ]]>
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="copyrightNum">
			(pp.copyright_num like '%$copyrightNum$%')
			</isNotEmpty>
			
			<isNotEmpty prepend="AND" property="programStatusId">
			(pp.program_status_id like #programStatusId#)
			</isNotEmpty>
									
			<isNotEmpty prepend="AND" property="copyrightArea">
			(ppd.commend_level like #copyrightArea#)
			</isNotEmpty>
			
			<isNotEmpty prepend="AND" property="proName">
			(pp.program_name like '%$proName$%')
			</isNotEmpty>
			
		  <isNotNull property="proTypeIdList">
       	  <iterate prepend="AND" property="proTypeIdList" open="(" close=")" conjunction="OR">
		   			pp.program_type_id = #proTypeIdList[]#
		  </iterate>
		  </isNotNull> 
			
			<isNotEmpty prepend="AND" property="proCustomer.customerName">
			(pc.customer_name like '%$proCustomer.customerName$%')
			</isNotEmpty>
			
		 <isNotEmpty prepend="AND" property="isSell">
			(pp.is_sell like '$isSell$')
		 </isNotEmpty>
			
		 <isEqual  property="isChecked" compareValue="1">
				<isNotEmpty prepend="AND" property="businessName">
					(owfcs.check_state_id like #businessName#)
				</isNotEmpty>
		 </isEqual>
		
		 <isEqual  property="isChecked" compareValue="0">	
				 <isNotEmpty prepend="AND" property="businessName">
					 (owfcs.check_state_id not like #businessName#)
				 </isNotEmpty>
		 </isEqual>
			
		 </dynamic>
    </select>
	
		<resultMap id="proProgramResult2" class="proProgram">
        <result property="id" column="id"/>
		<result property="proName" column="program_name"/>
    </resultMap>
	
    <select id="getProProgramsByOrder"  resultMap="proProgramResult2">
    <![CDATA[
        select pp.id,pp.program_name from tb_pro_program  pp

        where pp.id not  in(select tpo.program_id from tb_pro_order tpo where order_type_id=$typeId$) and pp.is_checked=3
    ]]>
    </select>
	
	    <select id="getProPrograms" resultMap="proProgramResult">
    <![CDATA[
        select * from tb_pro_program 
    ]]>
		<dynamic prepend="WHERE"> 
		<include refid="ProProgram_where_fragment"/>
			</dynamic>  
    </select>
	
	<select id="getProProgramsBySell"  resultMap="proProgramResult2">
    <![CDATA[
        select pp.id,pp.program_name from tb_pro_program  pp

        where pp.id not  in(select tpo.program_id from tb_pro_order tpo where order_type_id=$typeId$) and pp.is_checked=3 and pp.is_sell=1
    ]]>
    </select>
	
	    <select id="getProProgramsAll"  resultMap="proProgramResult2">
    <![CDATA[
        select pp.id,pp.program_name from tb_pro_program  pp

        where  pp.is_checked=3
    ]]>
    </select>
	
	<select id="getProProgramsBySellAll"  resultMap="proProgramResult2">
    <![CDATA[
        select pp.id,pp.program_name from tb_pro_program  pp

        where  pp.is_checked=3 and pp.is_sell=1
    ]]>
    </select>  

    <select id="getProProgramsByMap" parameterClass="java.util.Map">
     <![CDATA[  
      select * from tb_pro_program 
       ]]> 
 	 	  <dynamic prepend="WHERE"> 
 	 	  	<include refid="ProProgram_idList_fragment"/>
          </dynamic>      
  </select>
	
  <resultMap id="proOrderResults" class="proOrder">
     <result property="programId" column="program_id"/>
  </resultMap>     
 <select id="getProNameByOrders" resultMap="proOrderResults">
    <![CDATA[
        select program_id from tb_pro_order 
    ]]>
		<dynamic prepend="WHERE"> 
			<isNotEmpty prepend="AND" property="orderTypeId">
			(order_type_id like #orderTypeId#)
			</isNotEmpty>
		</dynamic>
    </select>
	
	<resultMap id="getPayMoneyList" class="proOrder">
     <result property="programId" column="program_id"/>
		<result property="paidMoney" column="paid_money"/>
  </resultMap>     
 <select id="getPayMoneyList" resultMap="getPayMoneyList">
    <![CDATA[
        select tpf.paid_money as paid_money,
			   tpr.program_id as program_id
			from tb_pro_finance tpf 
			    left outer join tb_pro_order tpr
					on tpf.order_id = tpr.id
    ]]>
		<dynamic prepend="WHERE"> 
			<isNotEmpty prepend="AND" property="orderTypeId">
			(tpr.order_type_id like #orderTypeId#)
			</isNotEmpty>
		</dynamic>
    </select>
	
    <select id="getProProgram" resultMap="proProgramResult">
    <![CDATA[
        select * from tb_pro_program
         where id = #value#
    ]]>
    </select>
	
	<resultMap id="ProTypeChildResult" class="proProgram">
        <result property="proProgramType.id" column="id"/>
    </resultMap>
    <select id="getProTypeChild" resultMap="ProTypeChildResult">
    <![CDATA[
        select id from tb_pro_program_type
         where parent_id = #value#
		
    ]]>
    </select>
	
    <insert id="addProProgram" parameterMap="addParam">
        <!--selectKey resultClass="java.lang.Long" keyProperty="id" >
            SELECT SEQ_id.NextVal AS id FROM DUAL
			
        </selectKey-->
        <![CDATA[
            insert into tb_pro_program (customer_id,copyright_num,create_by,create_date,end_date,modify_by,modify_date,program_name,start_date,program_type_id,business_name,is_checked,sow_count,arrive_date,checked_date,price,audience_rat,is_sell,copyright_area,program_status_id)
            values ( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,? )
        ]]>
        <selectKey resultClass="java.lang.Long" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
    </insert>

    <update id="updateProProgram" parameterMap="updateParam">
    <![CDATA[
        update tb_pro_program set
                   customer_id = ?,
                   copyright_num = ?,
				   start_date = ?,
                   end_date = ?,
                   modify_by = ?,
                   modify_date = ?,
                   program_name = ?,
                   program_type_id = ?,
				   business_name = ?,
				   is_checked = ?,
				   sow_count = ?,
				   arrive_date = ?,
				   checked_date = ?,
				   price = ?,
				   audience_rat = ?,
				   is_sell = ?,
				   copyright_area = ?,
		           program_status_id = ?
        where id = ?
    ]]>
    </update>
	
	    <update id="updateProProgramStatusId" parameterMap="updateprogramStatusParam">
    <![CDATA[
        update tb_pro_program set
		           program_status_id = ?
        where id = ?
    ]]>
    </update>

    <delete id="deleteProProgram">
    <![CDATA[
        delete from tb_pro_program
         where id = #value#
    ]]>
    </delete>
   <update id="deleteProPrograms" parameterClass="java.util.Map">
     <![CDATA[  
      delete from tb_pro_program 
       ]]> 
 	 	  <dynamic prepend="WHERE"> 
			<include refid="ProProgram_idList_fragment"/>
          </dynamic>      
  </update>   
</sqlMap>
