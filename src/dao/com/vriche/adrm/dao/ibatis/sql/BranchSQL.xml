<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" 
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="BranchSQL">
    <typeAlias alias="branch" type="com.vriche.adrm.model.Branch"/>
	<typeAlias alias="org" type="com.vriche.adrm.model.Org"/>
	<typeAlias alias="user" type="com.vriche.adrm.model.User"/>
	
	<cacheModel id="branch-cache" type="LRU">
		<flushInterval hours="24"/>
		<flushOnExecute statement="addBranch"/>
		<flushOnExecute statement="updateBranch"/>
		<flushOnExecute statement="deleteBranch"/>
		<flushOnExecute statement="deleteBranchs"/>
		<property name="size" value="1000" />
	</cacheModel>
    <parameterMap id="addParam" class="branch">
        <parameter property="createBy" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="createDate" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <parameter property="displayNo" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <parameter property="modifyBy" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="modifyDate" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <parameter property="name" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <parameter property="orgId" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="parentId" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <parameter property="treeLevel" jdbcType="INTEGER" javaType="java.lang.Integer"/>
    </parameterMap>

    <parameterMap id="updateParam" class="branch">
        <parameter property="createBy" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="createDate" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <parameter property="displayNo" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <parameter property="modifyBy" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="modifyDate" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <parameter property="name" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <parameter property="orgId" jdbcType="INTEGER" javaType="java.lang.Long"/>
        <parameter property="parentId" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <parameter property="treeLevel" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <parameter property="version" jdbcType="INTEGER" javaType="java.lang.Integer"/>
		<parameter property="id" jdbcType="INTEGER" javaType="java.lang.Long"/>
    </parameterMap>

    <resultMap id="branchResult" class="branch">
        <result property="createBy" column="create_by"/>
        <result property="createDate" column="create_date"/>
        <result property="displayNo" column="display_no"/>
        <result property="id" column="sys_branch_id"/>
        <result property="modifyBy" column="modify_by"/>
        <result property="modifyDate" column="modify_date"/>
        <result property="name" column="name"/>
        <!-- result property="org" column="sys_org_id" select="getOrg"/ -->
        <result property="orgId" column="sys_org_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="treeLevel" column="tree_level"/>
        <result property="version" column="version"/>
        <!-- result property="users" column=""/ -->
    </resultMap>
	
	
    <select id="getBranchsCount" resultClass="java.lang.Integer">
    <![CDATA[
        select count(*) from tb_sys_branch 
    ]]>
 	 	<dynamic prepend="WHERE"> 
			<isNotEmpty prepend="AND" property="createBy">
			(create_by = #createBy#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="createDate">
			(create_date = #createDate#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="displayNo">
			(display_no = #displayNo#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="id">
			(sys_branch_id = #id#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="modifyBy">
			(modify_by = #modifyBy#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="modifyDate">
			(modify_date = #modifyDate#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="name">
			(name = #name#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="orgId">
			(sys_org_id = #orgId#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parentId">
			(parent_id = #parentId#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="treeLevel">
			(tree_level = #treeLevel#)
			</isNotEmpty>
		</dynamic> 	 
    </select>	

    <select id="getBranchs" resultMap="branchResult">
    <![CDATA[
        select * from tb_sys_branch 
    ]]>
 	 	<dynamic prepend="WHERE"> 
			<isNotEmpty prepend="AND" property="createBy">
			(create_by = #createBy#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="createDate">
			(create_date = #createDate#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="displayNo">
			(display_no = #displayNo#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="id">
			(sys_branch_id = #id#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="modifyBy">
			(modify_by = #modifyBy#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="modifyDate">
			(modify_date = #modifyDate#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="name">
			(name = #name#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="orgId">
			(sys_org_id = #orgId#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parentId">
			(parent_id = #parentId#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="treeLevel">
			(tree_level = #treeLevel#)
			</isNotEmpty>
		</dynamic>
		order by sys_org_id,display_no
    </select>
	
	
	<select id="getBranchClass" resultClass="branch">
    <![CDATA[
        select sys_branch_id as id,name as name 
		from tb_sys_branch
         where sys_branch_id = #value#
    ]]>
    </select>
	
    <select id="getBranchsByIdList" parameterClass="java.util.Map" resultMap="branchResult">
     <![CDATA[  
      select * from tb_sys_branch 
       ]]> 
 	 	  <dynamic prepend="WHERE"> 
	      <isNotNull property="BranchIdList">
       	  <iterate prepend="AND" property="BranchIdList" open="(" close=")" conjunction="OR">
		   			 sys_branch_id = #BranchIdList[]#
		  </iterate>
		  </isNotNull> 
          </dynamic>      
  </select>     

	<select id="getBranchIdList" resultClass="java.lang.Long">
    <![CDATA[
        select sys_branch_id  from tb_sys_branch  where parent_id =#id#;
    ]]>
    </select>
	
    <select id="getBranch" resultMap="branchResult">
    <![CDATA[
        select * from tb_sys_branch
         where sys_branch_id = #value#
    ]]>
    </select>

	<select id="getBranchByName" resultMap="branchResult">
    <![CDATA[
        select * from tb_sys_branch
         where name = #name#
    ]]>
    </select>	

	
    <select id="getBranchIdsByOrgid" resultClass="map">
    <![CDATA[
        select sys_branch_id from tb_sys_branch
         where sys_org_id = #value#
    ]]>
    </select>		
	
    <select id="getUserBranchsByUserId" resultMap="branchResult">
    <![CDATA[
        select b.* from tb_sys_branch b,tb_sys_user_branch ub
         where (b.sys_branch_id = ub.branch_id) and ub.user_id = #id#
    ]]>
    </select>			
	

    <insert id="addBranch" parameterMap="addParam">
        <!--selectKey resultClass="java.lang.Long" keyProperty="id" >
            SELECT SEQ_sys_branch_id.NextVal AS id FROM DUAL
        </selectKey-->
        <![CDATA[
            insert into tb_sys_branch (create_by,create_date,display_no,modify_by,modify_date,name,sys_org_id,parent_id,tree_level)
            values ( ?,?,?,?,?,?,?,?,? )
        ]]>
        <selectKey resultClass="java.lang.Long" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
    </insert>
	

	

    <update id="updateBranch" parameterMap="updateParam">
    <![CDATA[
        update tb_sys_branch set
                   create_by = ?,
                   create_date = ?,
                   display_no = ?,
                   modify_by = ?,
                   modify_date = ?,
                   name = ?,
                   sys_org_id = ?,
                   parent_id = ?,
                   tree_level = ?,
                   version = ?
        where sys_branch_id = ?
    ]]>
    </update>

    <delete id="deleteBranch"   parameterClass="java.util.Map">
    <![CDATA[
        delete from tb_sys_branch
		  ]]>
         <dynamic prepend="WHERE"> 
	      <isNotNull property="BranchIdList">
       	  <iterate prepend="AND" property="BranchIdList" open="(" close=")" conjunction="OR">
		   			 sys_branch_id = #BranchIdList[]#
		  </iterate>
		  </isNotNull> 
          </dynamic>  
  
    </delete>
	
	    <!--delete id="deleteBranch">
    <![CDATA[
        delete from tb_sys_branch
         where sys_branch_id = #value# or parent_id = #value#
    ]]>
    </delete-->
	
    <delete id="deleteBranchUserByBanchId"  parameterClass="java.util.Map">
    <![CDATA[
        delete from tb_sys_user_branch
    ]]>
		<dynamic prepend="WHERE"> 
	      <isNotNull property="BranchIdList">
       	  <iterate prepend="AND" property="BranchIdList" open="(" close=")" conjunction="OR">
		   			 branch_id = #BranchIdList[]#
		  </iterate>
		  </isNotNull> 
          </dynamic>  
    </delete>
	
	
	<insert id="addBranchUser" parameterClass="map">
       	 insert into tb_sys_user_branch (user_id, branch_id) values (#userId#, #branchId#)
    </insert>	
	
	<delete id="deleteBranchUserByUserId">
        delete from tb_sys_user_branch where user_id = #value#
    </delete>	
	
	<delete id="deleteBranchUserByBanchAndUserId" parameterClass="java.util.Map">

        delete from tb_sys_user_branch 

		<dynamic prepend="WHERE"> 
			  <isNotNull  prepend="AND" property="branchId">
							branch_id = #branchId# 
			  </isNotNull> 
						
			  <isNotNull  prepend="AND" property="userId">
							user_id = #userId# 
			  </isNotNull>					
		</dynamic>  
		
    </delete>
	
	
   <update id="deleteBranchUsers" parameterClass="java.util.Map">
     <![CDATA[  
      delete from tb_sys_user_branch 
       ]]> 
 	 	  <dynamic prepend="WHERE"> 
	      <isNotNull property="BranchIdList">
       	  <iterate prepend="AND" property="BranchIdList" open="(" close=")" conjunction="OR">
		   			 branch_id = #BranchIdList[]#
		  </iterate>
		  </isNotNull> 
          </dynamic>      
  </update>   	
	
   <update id="deleteBranchs" parameterClass="java.util.Map">
     <![CDATA[  
      delete from tb_sys_branch 
       ]]> 
 	 	  <dynamic prepend="WHERE"> 
	      <isNotNull property="BranchIdList">
       	  <iterate prepend="AND" property="BranchIdList" open="(" close=")" conjunction="OR">
		   			 sys_branch_id = #BranchIdList[]#
		  </iterate>
		  </isNotNull> 
          </dynamic>      
  </update>   
	
	
   <update id="save_User_Org" parameterClass="java.util.Map">

      update tb_sys_user_rel set sys_org_id=#orgId#  where sys_org_id=#orgIdOld# and user_id in 
	   (
	     select user_id from tb_sys_user_branch where branch_id =#branchId# or branch_id in 
	      (
	        select sys_branch_id from tb_sys_branch where parent_id =#branchId# 
		   )
	   )
   
  
  </update> 	
	
	
	

    <select id="getBranchIdForOrgUser" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		SELECT tb_sys_user_branch.branch_id FROM
		tb_sys_user_branch
		Inner Join tb_sys_user ON tb_sys_user_branch.user_id = tb_sys_user.id
		Inner Join tb_sys_branch ON tb_sys_branch.sys_branch_id = tb_sys_user_branch.branch_id
		Inner Join tb_sys_org ON tb_sys_branch.sys_org_id = tb_sys_org.sys_org_id 
		where tb_sys_org.sys_org_id = #orgId# and  tb_sys_user.id=#userId#
    </select>	
	
	
	<delete id="deleteBranchUserByBranchId">
    <![CDATA[
        delete from tb_sys_user_branch
         where branch_id = #value#
    ]]>
    </delete>	
	
	
	<select id="getBranchsByUser" parameterClass="user"  resultMap="branchResult">

		select b.* from tb_sys_branch b 
			left outer join tb_sys_user_branch ub on  b.sys_branch_id = ub.branch_id
			left outer join tb_sys_user u on ub.user_id = u.id 
			left outer join tb_sys_org org on  org.sys_org_id  = b.sys_org_id  

		<dynamic prepend="WHERE"> 
			
			<!-- isNotEmpty prepend="AND" property="branchId">
				(ub.branch_id = #branchId#)
			</isNotEmpty -->	
			
			<isNotNull prepend="AND" property="id">
				(ub.user_id = #id#)
			</isNotNull>	
			
			<isNotNull prepend="AND" property="orgId">
				(b.sys_org_id = #orgId#)
			</isNotNull>			
			
	
			
        </dynamic>    

    </select>	
	
		<select id="getBranchsByParentUser" parameterClass="user"  resultMap="branchResult">

		select distinct b.* from tb_sys_branch b 
			left outer join tb_sys_user_branch ub on  b.sys_branch_id = ub.branch_id
			left outer join tb_sys_user u on ub.user_id = u.id 
			left outer join tb_sys_user_rel ur on ur.user_id = u.id 
			left outer join tb_sys_org org on  org.sys_org_id  = b.sys_org_id  

		<dynamic prepend="WHERE"> 
			

			<isNotNull prepend="AND" property="id">
				(ur.parent_user_id = #id#)
			</isNotNull>	
			
			<isNotNull prepend="AND" property="orgId">
				(b.sys_org_id = #orgId# and b.parent_id = 0)
			</isNotNull>			
			
	
			
        </dynamic>    

    </select>	
	
</sqlMap>
